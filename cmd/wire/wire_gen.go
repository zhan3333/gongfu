// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"gongfu/internal/client"
	"gongfu/internal/config"
	"gongfu/internal/http"
	"gongfu/internal/http/admin"
	"gongfu/internal/http/controller"
	"gongfu/internal/http/middlewares"
	"gongfu/internal/service"
	"gongfu/internal/service/store"
)

// Injectors from wire.go:

func NewApp(config2 *config.Config) (*http.Route, error) {
	officialAccount := service.NewOfficialAccount(config2)
	cmdable, err := client.NewRedis(config2)
	if err != nil {
		return nil, err
	}
	authCode := service.NewAuthCodeService(config2, cmdable)
	token := service.NewTokenService(config2)
	storeStore, err := store.NewStore(config2)
	if err != nil {
		return nil, err
	}
	storage := service.NewStorageService(config2)
	wechat, err := service.NewWechat(config2)
	if err != nil {
		return nil, err
	}
	useCase := controller.NewController(config2, officialAccount, authCode, token, storeStore, storage, wechat)
	adminUseCase := admin.NewUseCase(storeStore, storage)
	middlewaresMiddlewares := middlewares.NewMiddlewares(token, storeStore)
	route := http.NewRoute(config2, officialAccount, useCase, adminUseCase, middlewaresMiddlewares)
	return route, nil
}
